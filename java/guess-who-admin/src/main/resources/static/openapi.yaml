openapi: 3.0.3
info:
  title: Guess Who?
  version: '@project.version@'
  description: Documentação dos serviços REST do sistema de teste sobre conhecimento de personagens bíblicos.
  contact:
    email: lvrodriguesline-guess-who@yahoo.com
    name: Webmaster
    url: 'https://www.linkedin.com/in/luciano-rodrigues/'
servers:
  - url: 'http://localhost:5001/v1'
    variables: {}
    description: Desenvolvimento.
tags:
  - name: Informações
    description: Informações para consulta.
  - name: Configurações
    description: Configurações do Sistema.
paths:
  /cards:
    summary: Lista de personagens.
    description: Aprenenta uma lista de personagens bíblicos.
    get:
      summary: Listar os cartões de personagens.
      description: Apresenta uma lista paginada de personagens bíblicos.
      operationId: getCards
      tags:
        - Configurações
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/fields'
        - in: query
          name: name
          description: Padrão de nome para localizar os personagens.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageModel'
              examples:
                Sucesso:
                  $ref: '#/components/examples/PageModel'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
    post:
      summary: Insere um novo cartão de personagem bíblico.
      description: Adiciona um novo cartão de personagem bíblico, calculando o campo phoneme e os campos ids.
      operationId: addCard
      tags:
        - Configurações
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
            example: 
              name: Abel
              questions:
                - text: Quem foi o primeiro pastor?
                  evidence: Gênesis 4:2  
      responses:
        '201':
          description: Novo cartão de personagem criado.
          headers:
            Location:
              description: Link do novo registro criado.
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
              examples: 
                Novo Registro:
                  $ref: '#/components/examples/Card'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.      
        '404':
          $ref: '#/components/responses/notFound'
  /cards/{uuid}:
    get:
      summary: Localliza um cartão bíblico.
      description: Localiza um cartão bíblico utilizando sua chave de identificação única.
      operationId: getCard
      tags:
        - Configurações
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
              examples:
                Sucesso:
                  $ref: '#/components/examples/Card'
        '401':
          description: Não autorizado.
        '403':
          description: Sem permissão.
        '404':
          $ref: '#/components/responses/notFound'          
    delete:
      summary: Remover um Cartão de Personagem Bíblico.
      description: Remover as informações de um Cartão de Personagem Bíblico e suas referências.
      operationId: removeCard
      tags: 
        - Configurações
      parameters: 
        - $ref: '#/components/parameters/uuid'
      responses:
        '204':
          description: Sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Sem permissão.
        '404':     
          description: Cartão de Personagem não localizado.
    put:
      summary: Alterar um Cartão de Personagem..
      description: Alterar as informações de um Cartão de Personagem Bíblico. <br>
              O campo phoneme será recalculado com base no nome. 
              Novas perguntas (Question) não precisam do campo ID atribuídos.
      operationId: updateCard
      tags: 
        - Configurações
      parameters: 
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
            example:
              id: b7e0c17c-a6e4-4c19-ade1-7072dc783444
              name: Nome Alterado
              phoneme: B
              questions:
                - id: fe6f6474-fe96-43b7-a7a5-a511846e033c
                  text: Quem foi o primeiro pastor?
                  evidence: Gênesis 4:2  
                - id: ef6742c7-f3ed-4789-aea6-086a57f8cd05
                  text: Pergunta adicionada.
                  evidence: Nova Evidência.
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
              example: 
                id: b7e0c17c-a6e4-4c19-ade1-7072dc783444
                name: Nome Alterado
                phoneme: B
                questions:
                  - id: fe6f6474-fe96-43b7-a7a5-a511846e033c
                    text: Quem foi o primeiro pastor?
                    evidence: Gênesis 4:2  
                  - id: ef6742c7-f3ed-4789-aea6-086a57f8cd05
                    text: Pergunta adicionada.
                    evidence: Nova Evidência.       
        '401':
          description: Não autorizado.
        '403':
          description: Sem permissão.
        '404': 
          description: Cartão de Personagem não localizado.      
components:
  schemas:
    Card:
      description: Cartão sobre um personagem bíblico.
      type: object
      properties:
        id: 
          type: string
          format: uuid
          description: Identificador único do cartão de personagem bíblico.
        name:
          type: string
          description: Nome do personagem.
        phoneme:
          type: string
          description: Expressão fonética para identificar o nome do personagem.
        image:
          type: string
          description: Endereço da imagem sobre o personagem bíblico.
        questions:
          description: Pergundas sobre o personagem bíblico
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Question:
      description: Pergunta de conhecimento sobre personagem bíblico.
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único da pergunta sobre um personagem bíblico.
        text:
          type: string
          description: Texto da pergunta sobre um personagem bíblico.
        evidence:
          type: string
          description: Evidência da resposta sobre o personagem bíblico correspondente.
    Error:
      description: Informações sobre erros ocorridos.
      type: object
      properties:
        code:
          description: Código da resposta HTTP.
          type: integer
        status:
          description: Descrição do código de estado HTTP.
          type: string
        message:
          description: Mensagem principal de descrição do erro.
          type: string
        causes:
          description: Lista de detalhamento das causas do erro.
          type: array
          items:
            type: string
    Page:
      description: Informações paginadas.
      type: object
      properties:
        totalPages:
          description: Total de páginas para navegação.
          type: integer
        totalElements:
          description: Quantidade total de registros encontrados.
          type: integer
        number:
          description: Número de ordem da página.
          type: integer
        size:
          description: Tamanho da página quantidade de registros.
          type: integer
    _embedded:
      description: Registros da página corrente.
      type: object
      properties:
        collection:
          description: Nome da coleção de objetos.
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Card'
              - $ref: '#/components/schemas/Question'
    _link:
      description: Endereço de uma ação.
      type: object
      properties:
        href:
          description: URL
          type: string
          format: url
    _links:
      description: Conjunto de ações relacionadas a um objetos.
      type: object
      properties:
        collection:
          description: Conjunto de ações.
          type: array
          items:
            $ref: '#/components/schemas/_link'
    PageModel:
      description: Conjunto de informações de navegação em uma consulta que retorna uma lista de objetos.
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/_embedded'
        _links:
          $ref: '#/components/schemas/_links'
        Page:
          $ref: '#/components/schemas/Page'
  examples:
    InvalidFields:
      value:
        status: BAD_REQUEST
        message: Erro de seleção de campos para resposta.
        causes: 
          - Campo de resposta "name" não encontrado.
          - Campo de resposta "description" não encontrado.
    InvalidSort:
      value:
        status: BAD_REQUEST
        message: Erro de ordenação.
        causes: 
          - Campo de ordenação "name" não encontrado.
          - Campo de ordenação "description" não encontrado.                
    InvalidPage:
      value:
        status: BAD_REQUEST
        message: Índice de página inválido.
        causes:
          - Página incial não pode ser menor que 0 (zero).
    NotFound:
      value:
        status: NOT_FOUND
        messge: Nenhum registro localizado.
    Card:
      value:
        id: b7e0c17c-a6e4-4c19-ade1-7072dc783444
        name: Abel
        phoneme: B
        questions:
          - id: fe6f6474-fe96-43b7-a7a5-a511846e033c
            text: Quem foi o primeiro pastor?
            evidence: Gênesis 4:2  
    Question:
      value:
        id: fe6f6474-fe96-43b7-a7a5-a511846e033c
        text: Quem foi o primeiro pastor?
        evidence: Gênesis 4:2        
    Page:
      value:
        totalPages: 20
        totalElements: 97
        size: 5
        number: 0
    _links:
      value:
        - first:
            href: "http://localhost:5001/v1/cards?page=0&size=5&sort=name,asc"
        - self:
            href: "http://localhost:5001/v1/cards?page=0&size=5&sort=name,asc"
        - next:
            href: "http://localhost:5001/v1/cards?page=1&size=5&sort=name,asc"
        - last:
            href: "http://localhost:5001/v1/cards?page=19&size=5&sort=name,asc"        
    _embedded:
      value:
        cards: 
          id: b7e0c17c-a6e4-4c19-ade1-7072dc783444
          name: Abel
          phoneme: B
          questions:
            - id: fe6f6474-fe96-43b7-a7a5-a511846e033c
              text: Quem foi o primeiro pastor?
              evidence: Gênesis 4:2  
    PageModel:
      value:
        _embedded:
          cards:
            - id: b7e0c17c-a6e4-4c19-ade1-7072dc783444
              name: Abel
              phoneme: B
              questions:
                - id: fe6f6474-fe96-43b7-a7a5-a511846e033c
                  text: Quem foi o primeiro pastor?
                  evidence: Gênesis 4:2  
        _links:
          - first:
              href: "http://localhost:5001/v1/cards?page=0&size=5&sort=name,asc"
          - self:
              href: "http://localhost:5001/v1/cards?page=0&size=5&sort=name,asc"
          - next:
              href: "http://localhost:5001/v1/cards?page=1&size=5&sort=name,asc"
          - last:
              href: "http://localhost:5001/v1/cards?page=19&size=5&sort=name,asc"
        Page:
          totalPages: 20
          totalElements: 97
          size: 5
          number: 0
  parameters:
    page:
      name: page
      in: query
      description: Índice da página de consulta da requisição.
      required: false
      schema:
        type: integer
    size:
      name: size
      in: query
      description: Tamanho da página de resposta, em quantidade de registros.
      required: false
      schema:
        type: integer    
    sort:
      name: sort
      in: query
      description: Lista de campos para ordenação da resposta, separados por vírgula. <br>
        Cada campo pode ser sucedido das palavras chaves ASC (para ordenação ascendente) ou DESC (para ordenação descendente).
      required: false
      schema:
        type: string
    fields:
      name: fields
      in: query
      description: Lista de campos selecionados para a resposta, separados por vírgula.
      required: false
      schema:
        type: string
    id:
      name: id
      in: path
      required: true
      description: Identificador único do registro.
      schema:
        type: integer
    uuid:
      name: uuid
      in: path
      required: true
      description: Identificador único do registro.
      schema:
        type: string
        format: uuid
  responses:
    parentNotFound:
      description: Erro de informação de algum campo proprietário do conjunto de dados.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: 
            status: BAD_REQUEST
            message: Erro ao localizar um registro de relacionamento.
            causes:
              - Campo não encontrado.
    badRequest:
      description: Erro na passagem de parâmetros para paginação, ordenação, seleção de campos ou filtros de pesquisa.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Fields:
              $ref: '#/components/examples/InvalidFields'
            Invalid Sort:
              $ref: '#/components/examples/InvalidSort'
            Invalid Page:
              $ref: '#/components/examples/InvalidPage'
    notFound:
      description: Nenhum registro localizado.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Not Found:
              $ref: '#/components/examples/NotFound'
  securitySchemes:
    auth:
      type: oauth2
      description: Autenticação e Autorização de acesso.
      flows:
        password:
          tokenUrl: 'http://localhost:10000/realms/guess-who/protocol/openid-connect/token'
          scopes: {}              
security: 
  - auth: []
  